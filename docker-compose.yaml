version: '3.8'
services:
  db:
    build: ./db/
    restart: unless-stopped
    # env_file:
    #   - .env
    environment:
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - POSTGRES_DB=${PG_NAME}
    # user: '${MY_UID}:${MY_GID}'
    # container_name: postgres-db
    volumes:
      - pgdata:/var/lib/postgresql/data
      - pglog:/var/lib/postgresql/data/log
    command: [
        'postgres',
        '-c',
        'logging_collector=on',
        '-c',
        'log_directory=/var/lib/postgresql/data/log',
        # '-c',
        # 'log_statement=all',
      ]
    networks:
      - my_network
    ports:
      - ${PG_PORT}:${PG_PORT}

  app:
    # image: node-service
    image: mcnic/rs-nest-service-app
    # build:
    #   context: .
    #   dockerfile: ./Dockerfile
    # restart: unless-stopped
    # env_file:
    #   - .env
    environment:
      - DATABASE_URL=${DATABASE_URL}
    # - DB_TYPE=${DB_TYPE}
    # - POSTGRES_HOST=${POSTGRES_HOST}
    # - POSTGRES_USER=${DATABASE_USER}
    # - POSTGRES_PASS=${DATABASE_PASSWORD}
    # - POSTGRES_DB=${DB_NAME}
    # - POSTGRES_SYNC=false
    # - JWT_SECRET_KEY=${JWT_SECRET_KEY}
    # - POSTGRES_PORT=${POSTGRES_PORT}
    # - APP_EXPIRES=${TOKEN_EXPIRE_TIME}
    # - APP_PORT=${PORT}
    # - LVL_LOG=${LVL_LOG}
    ports:
      - ${PORT}:${PORT}
    # container_name: nest-rest-service
    depends_on:
      - db
    networks:
      - my_network
    volumes:
      # - .:/app
      # - migrations:/app/migrations
      # - ./logs:/usr/src/app/logs
      - ./src:/app/src
    command: ['npm', 'run', 'migrate:start:dev']

  # pgadmin:
  #   image: dpage/pgadmin4
  #   restart: on-failure
  #   container_name: pgadmin4
  #   environment:
  #     - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
  #     - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
  #     - PGADMIN_LISTEN_PORT=80
  #   ports:
  #     - '8080:80'
  #   volumes:
  #     - pgadmin-data:/var/lib/pgadmin
  #   depends_on:
  #     - db
  #   networks:
  #     - my_network

volumes:
  pgdata:
  pglog:
  # pgadmin-data:
  # migrations:
  node_modules:
  # logs:

networks:
  my_network:
    driver: bridge
